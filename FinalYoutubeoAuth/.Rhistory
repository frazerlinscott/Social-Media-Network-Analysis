cat("Missing viewCount or likeCount for video", video, "\n")
}
}
video_search <- yt_search("Post Malone")
View(video_search)
# Pick a video from video_search and get some info
# Initialize an empty data frame with the desired column names
video_stats_forDash <- data.frame(video_id = character(),
video_title = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
View(video_stats_df)
for (video in video_search$video_id) {
#print(video)
video_stats <- get_stats(video_id = video)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
title<-video_stats$title
view_count <- as.numeric(video_stats$viewCount)
like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title=title, view_count = view_count, like_count = like_count))
} else {
cat("Missing viewCount or likeCount for video", video, "\n")
}
}
video_search <- yt_search("Post Malone")
View(video_search)
# Pick a video from video_search and get some info
# Initialize an empty data frame with the desired column names
video_stats_forDash <- data.frame(video_id = character(),
video_title = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
# View the empty data frame
View(video_stats_forDash)
for (video in video_search$id$videoId) {
# Retrieve video statistics
video_stats <- yt_stats(video)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
title <- video_search$snippet$title[video_search$id$videoId == video]
view_count <- as.numeric(video_stats$viewCount)
like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
} else {
cat("Missing viewCount or likeCount for video", video, "\n")
}
}
video_search <- yt_search("Post Malone")
View(video_search)
# Pick a video from video_search and get some info
# Initialize an empty data frame with the desired column names
video_stats_forDash <- data.frame(video_id = character(),
video_title = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
View(video_stats_df)
for (video in video_search$video_id) {
#print(video)
video_stats <- get_stats(video_id = video)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
title <- video_search$snippet$title[video_search$id$videoId == video]
view_count <- as.numeric(video_stats$viewCount)
like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
} else {
cat("Missing viewCount or likeCount for video", video, "\n")
}
}
video_stats_forDash <- data.frame(video_id = character(),
video_title = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
View(video_stats_df)
video_stats_forDash <- data.frame(video_id = character(),
video_title = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
View(video_stats_forDash)
for (video in video_search$video_id) {
print(video)
#video_stats <- get_stats(video_id = video)
#if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
cat("Missing viewCount or likeCount for video", video, "\n")
#}
}
for (video in video_search$video_id) {
print(video)
#video_stats <- get_stats(video_id = video)
#if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
#}
}
for (video in video_search$video_id) {
#print(video)
video_stats <- get_stats(video_id = video)
video_stats
#if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
#}
}
for (video in video_search$video_id) {
#print(video)
video_stats <- get_stats(video_id = video)
video_stats
#if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
#}
}
for (video in video_search$video_id) {
#print(video)
video_stats <- get_stats(video_id = video)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
}
}
# Initialize an empty data frame with the desired column names
video_stats_forDash <- data.frame(video_id = character(),
video_title = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
View(video_stats_forDash)
for (video in video_search$video_id) {
#print(video)
video_stats <- get_stats(video_id = video)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
}
}
#Youtube Data Collection
library(tuber)
library(vosonSML)
library(magrittr)
library(igraph)
library(httpuv)
YTapi_key <- "AIzaSyATlclGOaBorzeCrKhO-NbuL7CYnafOULY"
YTclient_id <- "881581918236-p6lagdo0i8d655uso9k45sq31ke3g1tv.apps.googleusercontent.com"
YTclient_secret <- "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"
# Authenticate to YouTube using the tuber package
yt_oauth(app_id = YTclient_id, app_secret = YTclient_secret)
video_stats_forDash <- data.frame(video_id = character(),
video_title = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
View(video_stats_forDash)
for (video in video_search$video_id) {
#print(video)
video_stats <- get_stats(video_id = video)
vidoe_stats
#if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
#}
}
for (video in video_search$video_id) {
#print(video)
video_stats <- get_stats(video_id = video)
video_stats
#if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
#}
}
for (video in video_search$video_id) {
print(video)
#video_stats <- get_stats(video_id = video)
#video_stats
#if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
#}
}
for (video in video_search$video_id) {
print(video)
video_stats <- get_stats(video_id = video)
video_stats
#if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#view_count <- as.numeric(video_stats$viewCount)
#like_count <- as.numeric(video_stats$likeCount)
# Combine the extracted values with the existing data frame
#video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, video_title = title, view_count = view_count, like_count = like_count))
#} else {
#cat("Missing viewCount or likeCount for video", video, "\n")
#}
}
get_stats(video_id = "HsjZIGOXs2U")
video_stats <- get_stats(video_id = "HsjZIGOXs2U")
video_stats
View(video_stats)
View(video_search)
video_stats_forDash <- data.frame(video_id = character(),
video_title = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
View(video_stats_forDash)
video_stats <- get_stats(video_id = "HsjZIGOXs2U")
for (video in video_search$video_id) {
video_stats <- get_stats(video_id = video)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
view_count <- as.numeric(video_stats$viewCount)
like_count <- as.numeric(video_stats$likeCount)
video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, view_count = view_count, like_count = like_count))
} else {
cat("Missing viewCount or likeCount for video", video, "\n")
}
}
View(video_stats_forDash)
video_stats <- get_stats(video_id = video)
for (video in video_search) {
video
#video_stats <- get_stats(video_id = video)
# if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#  view_count <- as.numeric(video_stats$viewCount)
#  like_count <- as.numeric(video_stats$likeCount)
#  video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, view_count = view_count, like_count = like_count))
#} else {
#   cat("Missing viewCount or likeCount for video", video, "\n")
# }
}
for (video in video_search) {
video
#video_stats <- get_stats(video_id = video)
# if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#  view_count <- as.numeric(video_stats$viewCount)
#  like_count <- as.numeric(video_stats$likeCount)
#  video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, view_count = view_count, like_count = like_count))
#} else {
#   cat("Missing viewCount or likeCount for video", video, "\n")
# }
}
View(video_search)
ideo_stats_forDash <- data.frame(video_id = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
#View(video_stats_forDash)
video_stats <- get_stats(video_id = "HsjZIGOXs2U")
for (video in video_search) {
video$video_id
#video_stats <- get_stats(video_id = video)
# if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#  view_count <- as.numeric(video_stats$viewCount)
#  like_count <- as.numeric(video_stats$likeCount)
#  video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, view_count = view_count, like_count = like_count))
#} else {
#   cat("Missing viewCount or likeCount for video", video, "\n")
# }
}
video_stats <- get_stats(video_id = "HsjZIGOXs2U")
for (video in video_search) {
video[1]
#video_stats <- get_stats(video_id = video)
# if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#  view_count <- as.numeric(video_stats$viewCount)
#  like_count <- as.numeric(video_stats$likeCount)
#  video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, view_count = view_count, like_count = like_count))
#} else {
#   cat("Missing viewCount or likeCount for video", video, "\n")
# }
}
video_stats_forDash <- data.frame(video_id = character(),
view_count = numeric(),
like_count = numeric(),
stringsAsFactors = FALSE)
#View(video_stats_forDash)
video_stats <- get_stats(video_id = "HsjZIGOXs2U")
for (video in video_search) {
video
#video_stats <- get_stats(video_id = video)
# if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
#title <- video_search$snippet$title[video_search$id$videoId == video]
#  view_count <- as.numeric(video_stats$viewCount)
#  like_count <- as.numeric(video_stats$likeCount)
#  video_stats_forDash <- rbind(video_stats_forDash, data.frame(video_id = video, view_count = view_count, like_count = like_count))
#} else {
#   cat("Missing viewCount or likeCount for video", video, "\n")
# }
}
View(video_search)
for (i in 1:nrow(video_search)) {
video_id <- video_search$video_id[i]
video_stats <- get_stats(video_id = video_id)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
# Add viewCount and likeCount columns to video_search
video_search$viewCount[i] <- video_stats$viewCount
video_search$likeCount[i] <- video_stats$likeCount
} else {
cat("Missing viewCount or likeCount for video", video_id, "\n")
}
}
#Youtube Data Collection
library(tuber)
library(vosonSML)
library(magrittr)
library(igraph)
library(httpuv)
YTapi_key <- "AIzaSyATlclGOaBorzeCrKhO-NbuL7CYnafOULY"
YTclient_id <- "881581918236-p6lagdo0i8d655uso9k45sq31ke3g1tv.apps.googleusercontent.com"
YTclient_secret <- "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"
# Authenticate to YouTube using the tuber package
yt_oauth(app_id = YTclient_id, app_secret = YTclient_secret)
video_search <- yt_search("Post Malone")
View(video_search)
video_search <- yt_search("Post Malone")
View(video_search)
for (i in 1:nrow(video_searchForDashh)) {
video_id <- video_searchForDash$video_id[i]
video_stats <- get_stats(video_id = video_id)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
# Add viewCount and likeCount columns to video_search
video_searchForDash$viewCount[i] <- video_stats$viewCount
video_searchForDash$likeCount[i] <- video_stats$likeCount
} else {
cat("Missing viewCount or likeCount for video", video_id, "\n")
}
}
for (i in 1:nrow(video_searchForDash)) {
video_id <- video_searchForDash$video_id[i]
video_stats <- get_stats(video_id = video_id)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
# Add viewCount and likeCount columns to video_search
video_searchForDash$viewCount[i] <- video_stats$viewCount
video_searchForDash$likeCount[i] <- video_stats$likeCount
} else {
cat("Missing viewCount or likeCount for video", video_id, "\n")
}
}
video_searchForDash <- yt_search("Post Malone")
View(video_search)
View(video_searchForDash)
for (i in 1:nrow(video_searchForDash)) {
video_id <- video_searchForDash$video_id[i]
video_stats <- get_stats(video_id = video_id)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
# Add viewCount and likeCount columns to video_search
video_searchForDash$viewCount[i] <- video_stats$viewCount
video_searchForDash$likeCount[i] <- video_stats$likeCount
} else {
cat("Missing viewCount or likeCount for video", video_id, "\n")
}
}
View(video_searchForDash)
View(video_stats_forDash)
View(video_searchForDash)
video_stats_forDash_json_data <- toJSON(video_stats_forDash)
library(jsonlite)
video_stats_forDash_json_data <- toJSON(video_stats_forDash)
write(video_stats_forDash_json_data , "video_stats_forDash_json_data ")
video_stats_forDash_json_data <- toJSON(video_stats_forDash)
write(video_stats_forDash_json_data , "video_stats_forDash_json_data ")
video_stats_forDash_json_data <- toJSON(video_stats_forDash)
write(video_stats_forDash_json_data , "video_stats_forDash_json_data.json")
video_stats_forDash_json_data <- toJSON(video_stats_forDash)
write(video_stats_forDash_json_data , "video_stats_forDash_json_data.json")
View(video_stats_forDash)
View(video_searchForDash)
video_searchForDash_json_data <- toJSON(video_searchForDash)
write(video_searchForDash_json_data , "video_searchForDash_json_data.json")
library(dplyr)
# Group the dataset by 'channelId' and calculate total 'viewCount' and 'likeCount'
video_searchForDash <- video_searchForDash %>%
group_by(channelId) %>%
mutate(totalViewCount = sum(viewCount),
totalLikeCount = sum(likeCount)) %>%
ungroup()
library(dplyr)
# Group the dataset by 'channelId' and calculate total 'viewCount' and 'likeCount'
video_searchForDash <- video_searchForDash %>%
group_by(channelId) %>%
mutate(totalViewCount = sum(viewCount),
totalLikeCount = sum(likeCount)) %>%
ungroup()
video_searchForDash$viewCount <- as.numeric(video_searchForDash$viewCount)
video_searchForDash$likeCount <- as.numeric(video_searchForDash$likeCount)
# Group the dataset by 'channelId' and calculate total 'viewCount' and 'likeCount'
video_searchForDash <- video_searchForDash %>%
group_by(channelId) %>%
mutate(totalViewCount = sum(viewCount),
totalLikeCount = sum(likeCount)) %>%
ungroup()
View(video_searchForDash)
video_searchForDash_json_data <- toJSON(video_searchForDash)
write(video_searchForDash_json_data , "video_searchForDash_json_data.json")
yt_oauth(app_id = YTclient_id, app_secret = YTclient_secret)
video_searchForDash <- yt_search("Post Malone")
View(video_searchForDash)
for (video in video_search$video_id) {
video
video_stats <- get_stats(video_id = video)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
} else {
cat("Missing viewCount or likeCount for video", video, "\n")
}
}
for (i in 1:nrow(video_searchForDash)) {
video_id <- video_searchForDash$video_id[i]
video_stats <- get_stats(video_id = video_id)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
# Add viewCount and likeCount columns to video_search
video_searchForDash$viewCount[i] <- video_stats$viewCount
video_searchForDash$likeCount[i] <- video_stats$likeCount
} else {
cat("Missing viewCount or likeCount for video", video_id, "\n")
}
}
View(video_searchForDash)
video_searchForDash$viewCount <- as.numeric(video_searchForDash$viewCount)
video_searchForDash$likeCount <- as.numeric(video_searchForDash$likeCount)
video_searchForDash_json_data <- toJSON(video_searchForDash)
write(video_searchForDash_json_data , "video_searchForDash_json_data.json")
for (video in video_search$video_id) {
video
video_stats <- get_stats(video_id = video)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
} else {
cat("Missing viewCount or likeCount for video", video, "\n")
}
}
video_searchForDash <- yt_search("Post Malone")
View(video_searchForDash)
for (i in 1:nrow(video_searchForDash)) {
video_id <- video_searchForDash$video_id[i]
video_stats <- get_stats(video_id = video_id)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
# Add viewCount and likeCount columns to video_search
video_searchForDash$viewCount[i] <- video_stats$viewCount
video_searchForDash$likeCount[i] <- video_stats$likeCount
}
View(video_searchForDash)
for (i in 1:nrow(video_searchForDash)) {
video_id <- video_searchForDash$video_id[i]
video_stats <- get_stats(video_id = video_id)
if (!is.null(video_stats$viewCount) && !is.null(video_stats$likeCount)) {
# Add viewCount and likeCount columns to video_search
video_searchForDash$viewCount[i] <- video_stats$viewCount
video_searchForDash$likeCount[i] <- video_stats$likeCount
}
}
video_searchForDash$viewCount <- as.numeric(video_searchForDash$viewCount)
video_searchForDash$likeCount <- as.numeric(video_searchForDash$likeCount)
video_searchForDash_json_data <- toJSON(video_searchForDash)
write(video_searchForDash_json_data , "video_searchForDash_json_data.json")
twitter_data <- toJSON(twitter_data)
write(twitter_data , "twitter_data.json")
View(twitter_data)
save.image("~/Desktop/Social Media Milestone 2/FinalYoutubeoAuth/FinalRdata2205.RData")
